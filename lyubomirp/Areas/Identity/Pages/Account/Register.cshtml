@page
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<div class="container-fluid projects-section" style="text-align:center">
    <h2>@ViewData["Title"]</h2>
    <div class="container-fluid">
        <div class="container-fluid" style="max-width:30%;">
            <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
                <h4>Create a new account.</h4>
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Input.Email"></label>
                    <input asp-for="Input.Email" class="form-control" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Password"></label>
                    <input asp-for="Input.Password" class="form-control" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.ConfirmPassword"></label>
                    <input asp-for="Input.ConfirmPassword" class="form-control" />
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>
                @if (SignInManager.IsSignedIn(User))
                {
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Register</button>
                    </div>
                }
            </form>
        </div>
    </div>
</div>
    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }
