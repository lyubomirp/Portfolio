@inject SignInManager<IdentityUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-page="./Index">Profile</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a id="external-login" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li><a asp-page="../Register">Register User</a></li>
    <li><a asp-controller="Projects" asp-action="Create">Create Project</a></li>
    <li><a asp-controller="Projects" asp-action="Index">Project Dashboard</a></li>
    <li><a asp-controller="Summaries" asp-action="Create">Add to "Technologies"</a></li>
    <li><a asp-controller="Summaries" asp-action="Index">View Technologies</a></li>
    <li><a asp-controller="ProgramsLists" asp-action="Create">Add to "Programs"</a></li>
    <li><a asp-controller="ProgramsLists" asp-action="Index">View Programs</a></li>
    <li><a asp-controller="ProgramsLists" asp-action="Index">View Programs</a></li>
    <li><a asp-controller="Identity/Account" asp-action="Logout">Log out</a></li>
</ul>
